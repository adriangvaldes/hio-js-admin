import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "sonner"; //
import { getUserSession } from "@/actions/user/auth";
import { isError } from "@/lib/typeGuard";
import { UserSessionProvider } from "@/components/UserSessionProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const userSessionResult = await getUserSession();

  const initialSession = userSessionResult;

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} body_root antialiased`}>
        {children}
        <UserSessionProvider userSession={initialSession} />
        <Toaster richColors position="top-right" />
      </body>
    </html>
  );
}
